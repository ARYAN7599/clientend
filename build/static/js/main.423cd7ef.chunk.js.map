{"version":3,"sources":["FileUpload/FileUpload.jsx","FileItem/FileItem.jsx","FileList/FileList.jsx","nftBuySell/metaMask.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["FileUpload","files","setFiles","getFile","className","type","onChange","event","file","target","isUploading","formData","FormData","append","name","axios","post","then","res","catch","err","console","error","icon","faPlus","FileItem","faFileAlt","src","alt","faSpinner","onClick","href","rel","faCameraRetro","baseURL","FileList","getFileHandler","_name","get","useState","imageArray","setPost","a","data","map","f","Container","Row","Array","isArray","index","Col","md","style","width","height","thumbnail","rLogin","RLogin","cachedProvider","providerOptions","walletconnect","package","WalletConnectProvider","options","rpc","60457","supportedChains","MetaMask","provider","setProvider","sessions","account","setAccount","txHash","setTxHash","balance","setBalance","Address1","Address2","ABI1","ABI2","getBalance","ethers","providers","Web3Provider","window","ethereum","bal","bals","parseInt","Web3","utils","fromWei","toString","disconnect","topic","code","message","reset","encodeURL","connectContract1","web3","eth","Contract","contract1","document","getElementById","innerHTML","connectContract2","contract2","owner","methods","call","NFt_Details","Details","value","nfts","nftDetail","imageName","tokenURI","NFTMint","Image","myEntry","alert","send","from","getEncodedURL","NFTdecode","encode","decodeNFTurl","getURIdecoded","URIdecoded","mintedNFTtokenIds","_tokenIds","listedNFTtokenIds","numberOfNFTsolded","_itemsSold","NFTBuyered","_buyerList","NFTtokenURL","token","ApproveTheNFt","nftContract","tokenIds","approve","SellerListingNFT","nftContract1","tokenIds1","amount","toWei","balances","listTheNFTs","SellerListedItemById","token4","listedTokens","tokenId","seller","price","currentlyListed","itemId","removeNFTList","deleteToken","NFTBuyersList","tokenIds12","buyerLists","token5","sellerAproved","buyerId","buyer","buyerPrice","buyerAppr","ApproveBuyerBySeller","tokenIds123","itemIdApproved","approveBuyer","FetchBuyerApprovedPrice","token11","getBuyerPrice","datas","paymentForNFT","req","next","buyerIndex","abiArray","myAddress","contract","getalluser","id","connect","accounts","request","method","params","to","disabled","placeholder","App","filename","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.423cd7ef.chunk.js","sourcesContent":["import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\nimport './FileUpload.scss'\nimport axios from 'axios'\n\nconst FileUpload = ({ files, setFiles, getFile }) => {\n    const uploadHandler = (event) => {\n        const file = event.target.files[0];\n        if(!file) return;\n        file.isUploading = true;\n        setFiles([...files, file])\n\n        // upload file\n        const formData = new FormData();\n        formData.append(\n            \"newFile\",\n            file,\n            file.name\n        )\n        axios.post('http://139.59.65.197:5000/upload', formData)\n            .then((res) => {\n                file.isUploading = false;\n                setFiles([...files, file])\n            })\n            .catch((err) => {\n                // inform the user\n                console.error(err)\n\n                getFile(file.name)\n            });\n    }\n\n    return (\n        <>\n            <div className=\"file-card\">\n\n                <div className=\"file-inputs\">\n                    <input type=\"file\" onChange={uploadHandler} />\n                    <button>\n                        <i>\n                            <FontAwesomeIcon icon={faPlus} />\n                        </i>\n                        Upload\n                    </button>\n                </div>\n\n                <p className=\"main\">Supported files</p>\n                <p className=\"info\">PDF, JPG, PNG</p>\n\n            </div>\n        </>\n    )\n}\n\nexport default FileUpload\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFileAlt, faSpinner, faCameraRetro } from '@fortawesome/free-solid-svg-icons'\nimport './FileItem.scss'\n\nconst FileItem = ({ file, getFile }) => {\n    return (\n        <> \n            <li\n                className=\"file-item\"\n                key={file.name}>\n                <FontAwesomeIcon icon={faFileAlt} />\n               <img className=\"previewimg\" src={\"http://139.59.65.197:5000/images/\"+file.name} alt=\"UploadImage\" />\n               <p>{\"http://139.59.65.197:5000/images/\"+file.name}</p>\n                <div className=\"actions\">\n                    <div className=\"loading\"></div>\n                    {file.isUploading && <FontAwesomeIcon\n                        icon={faSpinner} className=\"fa-spin\"\n                        onClick={() => getFile(file.name)} />\n                    }\n                    {!file.isUploading &&\n                        <a href={\"http://139.59.65.197:5000/images/\"+file.name} target=\"_blank\"  rel=\"noreferrer\"><FontAwesomeIcon icon={faCameraRetro}\n                            onClick={() => getFile(file.name)} /></a>\n                    }\n                </div>\n            </li>\n        </>\n    )\n}\n\nexport default FileItem\n","import axios from 'axios'\nimport React, { useState } from \"react\";\nimport FileItem from './../FileItem/FileItem'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Col, Row, Image } from 'react-bootstrap'\nconst baseURL= \"http://139.59.65.197:5000/images/\";\n\nconst FileList = ({ files, getFile }) => {\n    const getFileHandler = (_name) => {\n        axios.get(`http://139.59.65.197:5000/images/${_name}`)\n            .then((res) => getFile(\"http://139.59.65.197:5000/images/\"+_name))\n            .catch((err) => console.error(err));\n    }\n    const [imageArray, setPost] = useState(null);\n    const get = async () => {\n        axios.get(\"http://139.59.65.197:5000\").then((res) => {\n            setPost(res.data);\n        });\n    }\n\n    const handleClick = () => { }\n    return (\n        <div>\n        <ul className=\"file-list\">\n            {\n                files &&\n                files.map(f => (<FileItem\n                    key={f.name}\n                    file={f}\n                    getFile={getFileHandler} />))\n            }\n        </ul>\n        <button type=\"get\" className=\"btn btn-dark\" onClick={() => get()} > get </button>\n                <div>\n                <Container>\n                        <Row>\n                        {Array.isArray(imageArray)\n\n                            ? imageArray.map((data, index) => (\n                            <Col md={4} key={index} >\n                            <div className=\"img-card\" onClick={() => handleClick(data)}>\n                            <Image style={{ width: '300px', height: \"300px\" }} thumbnail src={`${baseURL}${data}`} />\n                            <a href={baseURL+data} target=\"_blank\"  rel=\"noreferrer\"><p><b>{baseURL+data}</b></p></a>\n                            </div>\n                            </Col>\n                            )\n                            )\n                            : null}\n                        </Row>\n                    </Container>\n                </div>\n        </div>\n    )\n}\n\nexport default FileList\n","import React, { useState } from \"react\";\r\nimport RLogin, { RLoginButton } from '@rsksmart/rlogin'\r\nimport WalletConnectProvider from '@walletconnect/web3-provider'\r\nimport Web3 from \"web3\";\r\nimport './metaMask.scss';\r\nimport { ethers } from \"ethers\";\r\n\r\n// var isDes = false;\r\n\r\nconst rLogin = new RLogin({\r\n    cachedProvider: false,\r\n    providerOptions: {\r\n        walletconnect: {\r\n            package: WalletConnectProvider,\r\n            options: {\r\n                rpc: {\r\n                    60457: 'https://fufi.finance/rpc'\r\n                }\r\n            }\r\n        }\r\n    },\r\n    supportedChains: [60457]\r\n})\r\nconst MetaMask = () => {\r\n    const [provider, setProvider] = useState(null);\r\n    const [sessions, setSessions] = useState([]);\r\n    let [account, setAccount] = useState('');\r\n    const [txHash, setTxHash] = useState('');\r\n    const [balance, setBalance] = useState();\r\n\r\n    let Address1 = \"0x7543F199B9e3b533131caAefD51ebc20E3d2DB3C\";\r\n    let Address2 = \"0x4613bB88A3D1C9D4f6dB627F5d492dE1B42b3c7c\";\r\n    const ABI1 = [\r\n        {\r\n            \"inputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"constructor\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"owner\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"approved\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"Approval\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"owner\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"operator\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"approved\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"name\": \"ApprovalForAll\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"approve\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"bytes\",\r\n                    \"name\": \"data\",\r\n                    \"type\": \"bytes\"\r\n                }\r\n            ],\r\n            \"name\": \"decodeNFTurl\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"payable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"_imageName\",\r\n                    \"type\": \"string\"\r\n                },\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"_tokenURI\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"name\": \"NFTMint\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"payable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"from\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"safeTransferFrom\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"from\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"internalType\": \"bytes\",\r\n                    \"name\": \"data\",\r\n                    \"type\": \"bytes\"\r\n                }\r\n            ],\r\n            \"name\": \"safeTransferFrom\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"operator\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"approved\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"name\": \"setApprovalForAll\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"from\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"Transfer\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"from\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"transferFrom\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"_tokenIds\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"_value\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"owner\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"balanceOf\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"encoded\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bytes\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bytes\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"encodeURI\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bytes\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bytes\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"getApproved\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"i\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"getEncodedURL\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bytes\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bytes\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"owner\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"operator\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"isApprovedForAll\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"name\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"nfts\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"imageName\",\r\n                    \"type\": \"string\"\r\n                },\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"tokenURI\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"owner\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"ownerOf\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"bytes4\",\r\n                    \"name\": \"interfaceId\",\r\n                    \"type\": \"bytes4\"\r\n                }\r\n            ],\r\n            \"name\": \"supportsInterface\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"symbol\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"tokenURI\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"URIdecoded\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        }\r\n    ]\r\n    const ABI2 = [\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"buyerId\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"itemId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"approveBuyer\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"nftContract\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"_amount\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"listTheNFTs\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"payable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"itemId\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"amount\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"NFTBuyersList\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"payable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"buyerIndex\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"itemId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"paymentForNFT\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"payable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"itemId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"removeNFTList\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"constructor\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"_buyerList\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"_value\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"_itemsSold\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"_value\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"_tokenIds\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"_value\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"getAllNFTs\",\r\n            \"outputs\": [\r\n                {\r\n                    \"components\": [\r\n                        {\r\n                            \"internalType\": \"uint256\",\r\n                            \"name\": \"itemId\",\r\n                            \"type\": \"uint256\"\r\n                        },\r\n                        {\r\n                            \"internalType\": \"address\",\r\n                            \"name\": \"nftContract\",\r\n                            \"type\": \"address\"\r\n                        },\r\n                        {\r\n                            \"internalType\": \"uint256\",\r\n                            \"name\": \"tokenId\",\r\n                            \"type\": \"uint256\"\r\n                        },\r\n                        {\r\n                            \"internalType\": \"address payable\",\r\n                            \"name\": \"owner\",\r\n                            \"type\": \"address\"\r\n                        },\r\n                        {\r\n                            \"internalType\": \"address payable\",\r\n                            \"name\": \"seller\",\r\n                            \"type\": \"address\"\r\n                        },\r\n                        {\r\n                            \"internalType\": \"uint256\",\r\n                            \"name\": \"price\",\r\n                            \"type\": \"uint256\"\r\n                        },\r\n                        {\r\n                            \"internalType\": \"bool\",\r\n                            \"name\": \"currentlyListed\",\r\n                            \"type\": \"bool\"\r\n                        }\r\n                    ],\r\n                    \"internalType\": \"struct sellBuyNFT.listedToken[]\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"tuple[]\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"buyerId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"getBuyerList\",\r\n            \"outputs\": [\r\n                {\r\n                    \"components\": [\r\n                        {\r\n                            \"internalType\": \"address\",\r\n                            \"name\": \"seller\",\r\n                            \"type\": \"address\"\r\n                        },\r\n                        {\r\n                            \"internalType\": \"uint256\",\r\n                            \"name\": \"buyerId\",\r\n                            \"type\": \"uint256\"\r\n                        },\r\n                        {\r\n                            \"internalType\": \"uint256\",\r\n                            \"name\": \"itemId\",\r\n                            \"type\": \"uint256\"\r\n                        },\r\n                        {\r\n                            \"internalType\": \"address\",\r\n                            \"name\": \"nftContract\",\r\n                            \"type\": \"address\"\r\n                        },\r\n                        {\r\n                            \"internalType\": \"address\",\r\n                            \"name\": \"buyer\",\r\n                            \"type\": \"address\"\r\n                        },\r\n                        {\r\n                            \"internalType\": \"uint256\",\r\n                            \"name\": \"buyerPrice\",\r\n                            \"type\": \"uint256\"\r\n                        },\r\n                        {\r\n                            \"internalType\": \"bool\",\r\n                            \"name\": \"buyerAppr\",\r\n                            \"type\": \"bool\"\r\n                        }\r\n                    ],\r\n                    \"internalType\": \"struct sellBuyNFT.sellerAprove\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"tuple\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"buyerId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"getBuyerPrice\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"itemId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"getItemById\",\r\n            \"outputs\": [\r\n                {\r\n                    \"components\": [\r\n                        {\r\n                            \"internalType\": \"uint256\",\r\n                            \"name\": \"itemId\",\r\n                            \"type\": \"uint256\"\r\n                        },\r\n                        {\r\n                            \"internalType\": \"address\",\r\n                            \"name\": \"nftContract\",\r\n                            \"type\": \"address\"\r\n                        },\r\n                        {\r\n                            \"internalType\": \"uint256\",\r\n                            \"name\": \"tokenId\",\r\n                            \"type\": \"uint256\"\r\n                        },\r\n                        {\r\n                            \"internalType\": \"address payable\",\r\n                            \"name\": \"owner\",\r\n                            \"type\": \"address\"\r\n                        },\r\n                        {\r\n                            \"internalType\": \"address payable\",\r\n                            \"name\": \"seller\",\r\n                            \"type\": \"address\"\r\n                        },\r\n                        {\r\n                            \"internalType\": \"uint256\",\r\n                            \"name\": \"price\",\r\n                            \"type\": \"uint256\"\r\n                        },\r\n                        {\r\n                            \"internalType\": \"bool\",\r\n                            \"name\": \"currentlyListed\",\r\n                            \"type\": \"bool\"\r\n                        }\r\n                    ],\r\n                    \"internalType\": \"struct sellBuyNFT.listedToken\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"tuple\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"listedTokens\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"itemId\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"nftContract\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address payable\",\r\n                    \"name\": \"owner\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address payable\",\r\n                    \"name\": \"seller\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"price\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"currentlyListed\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"sellerAproved\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"seller\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"buyerId\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"itemId\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"nftContract\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"buyer\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"buyerPrice\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"buyerAppr\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        }\r\n    ]\r\n    const connect = () => rLogin.connect()\r\n        .then(({ provider }) => {\r\n            // isDes = true;\r\n            setProvider(provider)\r\n            const accounts = provider.request({ method: 'eth_accounts' }).then(([account]) => setAccount(account))\r\n            account = accounts[0];\r\n        })\r\n    const getBalance = async () => {\r\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n        const bal = await provider.getBalance(account);\r\n        let bals = parseInt(bal)\r\n        setBalance(Web3.utils.fromWei(bals.toString(), 'ether'));\r\n    };\r\n    async function handleDisconnect() {\r\n        try {\r\n            await provider.disconnect({\r\n                topic: sessions.topic,\r\n                code: 6000,\r\n                message: \"User disconnected\",\r\n            });\r\n            reset();\r\n        } catch (e) {\r\n        }\r\n    }\r\n    const reset = () => {\r\n        setAccount([]);\r\n    };\r\n    const faucetAddress = '0x88250f772101179a4ecfaa4b92a983676a3ce445'\r\n    const sendTransaction = () => provider.request({\r\n        method: 'eth_sendTransaction',\r\n        params: [{ from: account, to: faucetAddress, value: '10000' }]\r\n    }).then(setTxHash)\r\n    const connectContract1 = async () => {\r\n        window.web3 = await new Web3(provider);\r\n        window.contract1 = await new window.web3.eth.Contract(ABI1, Address1);\r\n        document.getElementById(\"contract1Id\").innerHTML = \"Connection Status: Success\";\r\n    }\r\n    const connectContract2 = async () => {\r\n        window.web3 = await new Web3(provider);\r\n        window.contract2 = await new window.web3.eth.Contract(ABI2, Address2);\r\n        document.getElementById(\"contract2Id\").innerHTML = \"Connection Status: Success\";\r\n    }\r\n    const owner = async () => {\r\n        const data = await window.contract1.methods.owner().call();\r\n        document.getElementById(\"ownerId\").innerHTML = `Owner: ${data}`;\r\n    }\r\n    const NFt_Details = async () => {\r\n        const Details = (document.getElementById(\"nftId\").value);\r\n        const nftDetail = await window.contract1.methods.nfts(Details).call();\r\n        document.getElementById(\"detailsId\").innerHTML = `${\"ImageName:\" + \" \" + nftDetail.imageName + \" \" + \"tokenURI:\" + \"\" + nftDetail.tokenURI}`;\r\n    }\r\n    const NFTMint = async () => {\r\n        const Image = (document.getElementById(\"imageId\").value);\r\n        const myEntry = (document.getElementById(\"nftURI\").value);\r\n        if (Image === null || Image === \"\", myEntry === null || myEntry === \"\") {\r\n            alert(\"Please Upload Nft using Upload Image\");\r\n            return false;\r\n        }\r\n        await window.contract1.methods.NFTMint(Image, myEntry).send({ from: account });\r\n    }\r\n    let encodeURL;\r\n    const getEncodedURL = async () => {\r\n        const myEntry = document.getElementById(\"encodeId\").value;\r\n        if (myEntry === null || myEntry === \"\") {\r\n            alert(\"Please put Index\");\r\n            return false;\r\n        }\r\n        encodeURL = await window.contract1.methods.getEncodedURL(myEntry).call();\r\n        document.getElementById(\"encodeIded\").innerHTML = `encode: ${encodeURL}`;\r\n    }\r\n    const NFTdecode = async () => {\r\n        const encode = document.getElementById(\"encodeIid\").value;\r\n        if (encode === null || encode === \"\") {\r\n            alert(\"Please put Index\");\r\n            return false;\r\n        }\r\n        const myEntry = await window.contract1.methods.getEncodedURL(encode).call();\r\n        await window.contract1.methods.decodeNFTurl(myEntry).send({ from: account });\r\n    }\r\n    const getURIdecoded = async () => {\r\n        const data = await window.contract1.methods.URIdecoded().call();\r\n        document.getElementById(\"URIdecodedId\").innerHTML = `URIdecoded: ${data}`;\r\n    }\r\n    const mintedNFTtokenIds = async () => {\r\n        const data = await window.contract1.methods._tokenIds().call();\r\n        document.getElementById(\"tokenIds\").innerHTML = `_tokenIds: ${data}`;\r\n    }\r\n    const listedNFTtokenIds = async () => {\r\n        const data = await window.contract2.methods._tokenIds().call();\r\n        document.getElementById(\"listedNFTId\").innerHTML = `_tokenIds: ${data}`;\r\n    }\r\n    const numberOfNFTsolded = async () => {\r\n        const data = await window.contract2.methods._itemsSold().call();\r\n        document.getElementById(\"soldIds\").innerHTML = `_tokenIds: ${data}`;\r\n    }\r\n    const NFTBuyered = async () => {\r\n        const data = await window.contract2.methods._buyerList().call();\r\n        document.getElementById(\"buyerIds\").innerHTML = `_tokenIds: ${data}`;\r\n    }\r\n    const NFTtokenURL = async () => {\r\n        const token = document.getElementById(\"mintedId\").value;\r\n        if (token === null || token === \"\") {\r\n            alert(\"Please put token Index\");\r\n            return false;\r\n        }\r\n        const data = await window.contract1.methods.tokenURI(token).call();\r\n        document.getElementById(\"mintedNFTId\").innerHTML = `tokenURIs: ${data}`;\r\n    }\r\n    const ApproveTheNFt = async () => {\r\n        const nftContract = Address2;\r\n        const tokenIds = document.getElementById(\"approveMintId\").value;\r\n        if (nftContract === null || nftContract === \"\", tokenIds === null || tokenIds === \"\") {\r\n            alert(\"Please fill field\");\r\n            return false;\r\n        }\r\n        await window.contract1.methods.approve(nftContract, tokenIds).send({ from: account });\r\n    }\r\n    const SellerListingNFT = async () => {\r\n        const nftContract1 = Address1;\r\n        const tokenIds1 = document.getElementById(\"sellerNFTId\").value;\r\n        const amount = document.getElementById(\"sellerGivenPrice\").value;\r\n        const balances = await Web3.utils.toWei(amount, 'ether');\r\n        if (nftContract1 === null || nftContract1 === \"\", tokenIds1 === null || tokenIds1 === \"\") {\r\n            alert(\"Please fill all fields\");\r\n            return false;\r\n        }\r\n        await window.contract2.methods.listTheNFTs(nftContract1, tokenIds1, balances).send({ from: account });\r\n    }\r\n    const SellerListedItemById = async () => {\r\n        const token4 = document.getElementById(\"listedTokenId\").value;\r\n        if (token4 === null || token4 === \"\") {\r\n            alert(\"Please put Index\");\r\n            return false;\r\n        }\r\n        const nftDetail = await window.contract1.methods.nfts(token4).call();\r\n        const data = await window.contract2.methods.listedTokens(token4).call();\r\n        document.getElementById(\"URIDetails\").innerHTML = `${\"nftContract:\" + \" \" + data.nftContract + \" \" + \"tokenId:\" + \"\" + data.tokenId + \" \" + \"ownerAddress:\" + \"\" + data.owner + \" \" + \"sellerAddress:\" + \"\" + data.seller + \" \" + \"price:\" + \"\" + data.price + \" \" + \"currentlyListed:\" + \"\" + data.currentlyListed}`;\r\n        document.getElementById(\"URIDetails\").innerHTML = `${\"itemId:\" + \" \" + data.itemId + \" \" + \"nftName:\" + \" \" + nftDetail.imageName + \" \" + \"nftContract:\" + \" \" + data.nftContract + \" \" + \"tokenId:\" + \"\" + data.tokenId + \" \" + \"ownerAddress:\" + \"\" + data.owner + \" \" + \"sellerAddress:\" + \"\" + data.seller + \" \" + \"price:\" + \"\" + data.price + \" \" + \"currentlyListed:\" + \"\" + data.currentlyListed}`;\r\n    }\r\n\r\n    const removeNFTList = async () => {\r\n        const deleteToken = document.getElementById(\"deletetokenId\").value;\r\n        if (deleteToken === null || deleteToken === \"\") {\r\n            alert(\"Please put index which you want to delete\");\r\n            return false;\r\n        }\r\n        await window.contract2.methods.removeNFTList(deleteToken).send({ from: account });\r\n    }\r\n    const NFTBuyersList = async () => {\r\n        const tokenIds12 = document.getElementById(\"buyerItemID\").value;\r\n        const amount = document.getElementById(\"buyerPrice\").value;\r\n        if (tokenIds12 === null || tokenIds12 === \"\") {\r\n            alert(\"Please all fields\");\r\n            return false;\r\n        }\r\n        var balances = await Web3.utils.toWei(amount, 'ether');\r\n        await window.contract2.methods.NFTBuyersList(tokenIds12, balances).send({ from: account });\r\n    }\r\n\r\n    const buyerLists = async () => {\r\n        const token5 = document.getElementById(\"buyerId\").value;\r\n        if (token5 === null || token5 === \"\") {\r\n            alert(\"Please put index\");\r\n            return false;\r\n        }\r\n        const data = await window.contract2.methods.sellerAproved(token5).call();\r\n        document.getElementById(\"buyerDetails\").innerHTML = `${\"sellerAddress:\" + \" \" + data.seller + \" \" + \"buyerId:\" + \"\" + data.buyerId + \" \" + \"itemId:\" + \"\" + data.itemId + \" \" + \"nftContract:\" + \"\" + data.nftContract + \" \" + \"buyerAddress:\" + \"\" + data.buyer + \" \" + \"buyerPrice:\" + \"\" + data.buyerPrice + \" \" + \"buyerApproved:\" + \"\" + data.buyerAppr}`;\r\n    }\r\n    const ApproveBuyerBySeller = async () => {\r\n        const tokenIds123 = document.getElementById(\"selectedBuyerId\").value;\r\n        const itemIdApproved = document.getElementById(\"buyerselectedItemId\").value;\r\n        if (tokenIds123 === null || tokenIds123 === \"\", itemIdApproved == null || itemIdApproved === \"\") {\r\n            alert(\"Please both fields\");\r\n            return false;\r\n        }\r\n        await window.contract2.methods.approveBuyer(tokenIds123, itemIdApproved).send({ from: account });\r\n    }\r\n\r\n    const FetchBuyerApprovedPrice = async () => {\r\n        const token11 = document.getElementById(\"fetchedBuyerId\").value;;\r\n        if (token11 == null || token11 === \"\") {\r\n            alert(\"Please put index\");\r\n            return false;\r\n        }\r\n        var datas = await window.contract2.methods.getBuyerPrice(token11).call();\r\n        document.getElementById(\"selectedPrice\").innerHTML = `tokenURIDetails: ${datas}`;\r\n    }\r\n    const paymentForNFT = async (req, res, next) => {\r\n        const buyerIndex = document.getElementById(\"NFTpaymentId\").value;\r\n        const itemId = document.getElementById(\"NFTpaymentId1\").value;\r\n        if (buyerIndex == null || buyerIndex === \"\", itemId === null || itemId === \"\") {\r\n            alert(\"Please fill both fields\");\r\n            return false;\r\n        }\r\n        const abiArray = ABI2;\r\n        let myAddress = buyerIndex;\r\n        if (myAddress == null || myAddress === \"\") {\r\n            alert(\"fill buyerIndex\");\r\n            return false;\r\n        }\r\n        var contract = new window.web3.eth.Contract(abiArray, Address2);\r\n        var getalluser = await contract.methods.getBuyerPrice(myAddress).call();\r\n        await window.contract2.methods.paymentForNFT(buyerIndex, itemId).send({ from: account, value: getalluser.toString() });\r\n\r\n    }\r\n    return (\r\n        <div className=\"nfts\">\r\n            <h4 className=\"title\"><b><i>\r\n                <center>NFT MarketPlace</center>\r\n            </i></b></h4>\r\n            <div id=\"example1\">\r\n                <br />\r\n                <h1>MetaMask Wallet Connection</h1>\r\n                <div className=\"column align-items-start\">\r\n                    <div className=\"col\">\r\n                        <RLoginButton onClick={connect} >Connect wallet Address</RLoginButton>\r\n                        <p>wallet address: {account}</p>\r\n                    </div>\r\n                    <br />\r\n                    <div className=\"col\">\r\n                        <button onClick={getBalance}>Fufi Balance</button>\r\n                        <p>Wallet_Balance: {balance}</p>\r\n                    </div>\r\n                    <br />\r\n                    <div>\r\n                        <button onClick={handleDisconnect}>Disconnect</button>\r\n                    </div>\r\n                    <br />\r\n                    <div className=\"col\">\r\n                        <button onClick={sendTransaction} disabled={!account}>send transaction</button>\r\n                        <p>txHash: {txHash}</p>\r\n                    </div>\r\n                    <br />\r\n                    <div className=\"col\">\r\n                        <button onClick={connectContract1}>CONNECT TO CONTRACT1</button>\r\n                        <p id=\"contract1Id\" className=\"inputs\">Not Connected to the smart Contract</p>\r\n                    </div>\r\n                    <br />\r\n                    <div className=\"col\">\r\n                        <button onClick={connectContract2}>CONNECT TO CONTRACT2</button>\r\n                        <p id=\"contract2Id\" className=\"inputs\">Not Connected to the smart Contract</p>\r\n                    </div>\r\n                    <br />\r\n                    <div className=\"col\">\r\n                        <button onClick={owner}>get owner of the Smart Contract</button>\r\n                        <p id=\"ownerId\" className=\"inputs\">Owner of Smart Contract </p>\r\n                    </div>\r\n                    <br />\r\n                    <div className=\"col\">\r\n                        <input type=\"text\" className=\"inputs\" placeholder=\"NFTIndex\" id=\"nftId\" /><br />\r\n                        <button onClick={NFt_Details}>get_NFTs</button>\r\n                        <p id=\"detailsId\" className=\"inputs\">details NFt </p>\r\n                    </div>\r\n                    <br />\r\n                    <div className=\"col\">\r\n                        <input type=\"text\" className=\"inputs\" placeholder=\"ImageName\" id=\"imageId\" />\r\n                        <input type=\"text\" className=\"inputs\" placeholder=\"nftURI\" id=\"nftURI\" />\r\n                        <button onClick={NFTMint}>Mint CONTRACT URI</button>\r\n                    </div>\r\n                    <br />\r\n                    <div className=\"col\">\r\n                        <input type=\"text\" className=\"inputs\" placeholder=\"EncodedURIId\" id=\"encodeId\" /><br />\r\n                        <button onClick={getEncodedURL}>get CONTRACT URI</button>\r\n                        <p id=\"encodeIded\" className=\"inputs\">encode url of Smart Contract </p>\r\n                    </div>\r\n                    <br />\r\n                    <div className=\"col\">\r\n                        <input type=\"text\" className=\"inputs\" placeholder=\"decodeURIId\" id=\"encodeIid\" /><br />\r\n                        <button onClick={NFTdecode}>decode CONTRACT URI</button>\r\n                    </div>\r\n                    <br />\r\n                    <div className=\"col\">\r\n                        <button onClick={getURIdecoded}>get URIdecoded of the Smart Contract</button><br />\r\n                        <p id=\"URIdecodedId\" className=\"inputs\">URIdecoded of Smart Contract </p>\r\n                    </div>\r\n                    <br />\r\n                    {/* <div  className=\"row align-items-start\"> */}\r\n                    <div className=\"col\">\r\n                        <button onClick={mintedNFTtokenIds}>mintedNFT count </button><br />\r\n                        <p id=\"tokenIds\" className=\"inputs\">mintedNFTtoken </p>\r\n                    </div>\r\n                    <br />\r\n                    <div className=\"col\">\r\n                        <button onClick={listedNFTtokenIds}>listedNFT count </button><br />\r\n                        <p id=\"listedNFTId\" className=\"inputs\">listedNFT no. </p>\r\n                    </div>\r\n                    <br />\r\n                    <div className=\"col\">\r\n                        <button onClick={numberOfNFTsolded}>soldedNFT count </button><br />\r\n                        <p id=\"soldIds\" className=\"inputs\">NFTsolded no. </p>\r\n                    </div>\r\n                    <br />\r\n                    <div className=\"col\">\r\n                        <button onClick={NFTBuyered}>NFTBuyered </button><br />\r\n                        <p id=\"buyerIds\" className=\"inputs\">NFTBuyered no. </p>\r\n                    </div>\r\n                    {/* </div> */}\r\n                    <br />\r\n                    <div className=\"col\">\r\n                        <input type=\"text\" className=\"inputs\" placeholder=\"tokenURIId\" id=\"mintedId\" /><br />\r\n                        <button onClick={NFTtokenURL}>tokenURI CONTRACT URI</button>\r\n                        <p id=\"mintedNFTId\" className=\"inputs\">tokenURI of Smart Contract </p>\r\n                    </div>\r\n                    <br />\r\n                    <div className=\"col\">\r\n                        <input type=\"text\" className=\"inputs\" placeholder=\"approveTokenId\" id=\"approveMintId\" /><br />\r\n                        <button onClick={ApproveTheNFt}>Approve CONTRACT URI</button>\r\n                    </div>\r\n                    <br />\r\n                    <div className=\"col\">\r\n                        <input type=\"text\" className=\"inputs\" placeholder=\"listTheNFTId\" id=\"sellerNFTId\" />\r\n                        <input type=\"text\" className=\"inputs\" placeholder=\"amount\" id=\"sellerGivenPrice\" /><br/>\r\n                        <button onClick={SellerListingNFT}>listTheNFTs CONTRACT URI</button>\r\n                    </div>\r\n                    <br />\r\n                    <div className=\"col\">\r\n                        <input type=\"text\" className=\"inputs\" placeholder=\"tokenId\" id=\"listedTokenId\" /><br />\r\n                        <button onClick={SellerListedItemById}>SellerListedItemById CONTRACT URI</button>\r\n                        <p id=\"URIDetails\" className=\"inputs\">getItems of Smart Contract </p>\r\n                    </div>\r\n                    <br />\r\n                    <div className=\"col\">\r\n                        <input type=\"number\" className=\"inputs\" placeholder=\"deletetoken\" id=\"deletetokenId\" /><br />\r\n                        <button onClick={removeNFTList}>DeleteListedNft CONTRACT URI</button>\r\n                    </div>\r\n                    <br />\r\n                    <div className=\"col\">\r\n                        <input type=\"text\" className=\"inputs\" placeholder=\"itemId\" id=\"buyerItemID\" />\r\n                        <input type=\"number\" className=\"inputs\" placeholder=\"_amount\" id=\"buyerPrice\" />\r\n                        <button onClick={NFTBuyersList}>NFTBuyersList CONTRACT URI</button>\r\n                    </div>\r\n                    <br />\r\n                    <div className=\"col\">\r\n                        <input type=\"text\" className=\"inputs\" placeholder=\"buyerIndex\" id=\"buyerId\" /><br />\r\n                        <button onClick={buyerLists}>get buyers list</button>\r\n                        <p id=\"buyerDetails\" className=\"inputs\">sellerAproved of Smart Contract </p>\r\n                    </div>\r\n                    <br />\r\n                    <div className=\"col\">\r\n                        <input type=\"text\" className=\"inputs\" placeholder=\"buyerId\" id=\"selectedBuyerId\" />\r\n                        <input type=\"text\" className=\"inputs\" placeholder=\"itemId\" id=\"buyerselectedItemId\" />\r\n                        <button onClick={ApproveBuyerBySeller}>approveBuyer CONTRACT URI</button><br />\r\n                    </div>\r\n                    <br />\r\n                    <div className=\"col\">\r\n                        <input type=\"text\" className=\"inputs\" placeholder=\"buyerIds\" id=\"fetchedBuyerId\" /><br />\r\n                        <button onClick={FetchBuyerApprovedPrice}>getBuyerPrice CONTRACT URI</button>\r\n                        <p id=\"selectedPrice\" className=\"inputs\">getBuyerPrice of Smart Contract </p>\r\n                    </div>\r\n                    <br />\r\n                    <div className=\"col\">\r\n                        <input type=\"text\" className=\"inputs\" placeholder=\"buyerIndex\" id=\"NFTpaymentId\" />\r\n                        <input type=\"text\" className=\"inputs\" placeholder=\"itemId\" id=\"NFTpaymentId1\" />\r\n                        <button onClick={paymentForNFT}>paymentForNFT CONTRACT URI</button>\r\n                    </div>\r\n                </div>\r\n                <br />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default MetaMask;","import { useState } from 'react'\nimport './App.scss';\nimport FileUpload from './FileUpload/FileUpload';\nimport FileList from './FileList/FileList';\nimport NftSell from './nftBuySell/metaMask';\n\nfunction App() {\n  const [files, setFiles] = useState([])\n\n  const getFile = (filename) => {\n\n    setFiles(files.filter(file => file.name !== filename))\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"title\"><center>Upload file</center></div>\n      <FileUpload files={files} setFiles={setFiles}\n        getFile={getFile} />\n      <FileList files={files} getFile={getFile} />\n      <div>\n    <NftSell/>\n    </div>\n    </div>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}